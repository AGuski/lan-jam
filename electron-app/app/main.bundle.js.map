{"version":3,"sources":["/Users/alex/WebDevelopment/lan-jam/web-app/src/$_gendir lazy","/Users/alex/WebDevelopment/lan-jam/web-app/src/app/app.component.css","/Users/alex/WebDevelopment/lan-jam/web-app/src/app/app.component.html","/Users/alex/WebDevelopment/lan-jam/web-app/src/app/app.component.ts","/Users/alex/WebDevelopment/lan-jam/web-app/src/app/app.module.ts","/Users/alex/WebDevelopment/lan-jam/web-app/src/app/material.module.ts","/Users/alex/WebDevelopment/lan-jam/web-app/src/app/midi-connection.class.ts","/Users/alex/WebDevelopment/lan-jam/web-app/src/app/midi.service.ts","/Users/alex/WebDevelopment/lan-jam/web-app/src/app/server.service.ts","/Users/alex/WebDevelopment/lan-jam/web-app/src/app/websocket.service.ts","/Users/alex/WebDevelopment/lan-jam/web-app/src/environments/environment.ts","/Users/alex/WebDevelopment/lan-jam/web-app/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\treturn new Promise(function(resolve, reject) { reject(new Error(\"Cannot find module '\" + req + \"'.\")); });\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_gendir lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/alex/WebDevelopment/lan-jam/web-app/src/$$_gendir lazy\n// module id = ../../../../../src/$$_gendir lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host() {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n      -ms-flex-direction: column;\\n          flex-direction: column;\\n  -webkit-box-pack: justify;\\n      -ms-flex-pack: justify;\\n          justify-content: space-between;\\n  height: 100vh;\\n}\\n\\n.toolbar-spacer {\\n  -webkit-box-flex: 1;\\n      -ms-flex: 1 1 auto;\\n          flex: 1 1 auto;\\n}\\n\\n.top, .middle, .bottom {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n      -ms-flex-direction: column;\\n          flex-direction: column;\\n  -webkit-box-pack: center;\\n      -ms-flex-pack: center;\\n          justify-content: center;\\n  -webkit-box-align: center;\\n      -ms-flex-align: center;\\n          align-items: center;\\n  padding: 20px;\\n}\\n\\n.server-info {\\n  font-size: 16px;\\n}\\n\\n.name-input {\\n  margin-top: 10px;\\n  margin-right: 10px;\\n  font-size: 16px;\\n}\\n\\n.clients-title {\\n  margin-bottom: 10px;\\n  color: rgba(255,255,255,.87);\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/alex/WebDevelopment/lan-jam/web-app/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<md-toolbar color=\\\"primary\\\">\\n  <span>LAN Jam App</span>\\n  <span class=\\\"toolbar-spacer\\\"></span>\\n  <span\\n    class=\\\"server-info\\\" \\n    *ngIf=\\\"serverAddress\\\"\\n    >Connect: <strong>{{serverAddress}}</strong>\\n  </span>\\n  <md-toolbar-row>\\n    <md-form-field class=\\\"name-input\\\">\\n      <input mdInput type=\\\"text\\\" placeholder=\\\"Your name\\\" #name>\\n    </md-form-field>\\n    <button\\n      md-raised-button\\n      color=\\\"accent\\\"\\n      selected=\\\"true\\\"\\n      (click)=\\\"setName(name.value)\\\"\\n    >Set Name\\n    </button>\\n  </md-toolbar-row>\\n</md-toolbar>\\n\\n  \\n  <div class=\\\"top\\\">\\n    \\n    <span class=\\\"clients-title\\\">Jamming buddies in the house:</span>\\n    <md-chip-list>\\n      <md-chip *ngFor=\\\"let clientName of connections\\\"\\n        color=\\\"primary\\\"\\n        selected=\\\"true\\\"\\n      >{{clientName}}\\n      </md-chip>\\n    </md-chip-list>\\n\\n  </div>\\n  \\n  \\n  <div class=\\\"middle\\\">\\n    \\n    <button \\n      md-raised-button\\n      color=\\\"primary\\\"\\n      (click)=\\\"pushTheButton()\\\"\\n    >JAM!</button>\\n\\n  </div>\\n  \\n  \\n  <div class=\\\"bottom\\\">\\n    \\n    <md-chip\\n      [color]=\\\"clientsColor\\\"\\n      selected=\\\"true\\\"\\n    >Clients: {{connections.length}}\\n    </md-chip>\\n\\n  </div>\\n  \\n  \"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/alex/WebDevelopment/lan-jam/web-app/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { MidiService } from './midi.service';\nimport { MidiConnection } from './midi-connection.class';\nimport { Subject } from 'rxjs/Rx';\nimport { WebsocketService } from './websocket.service';\nimport { ServerService } from './server.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n\n  serverAddress = '';\n\n  clientsColor = 'none';\n\n  connections: string[] = [];\n  webSocket: Subject<any>;\n\n  midiConnection: MidiConnection;\n\n  /** \n  *    create melody array with MIDI messages:\n  *\n  * \n  *              MIDI Channel Voice Message Specification\n  * \n  * \n  *         Status Byte        Data Byte I        Data Byte II\n  *        ______|______      ______|______      ______|______    \n  *       /             \\    /             \\    /             \\ \n  *\n  *       1 0 0 1 0 0 0 0    0 0 1 1 1 1 0 0    0 1 0 1 1 0 1 0 \n  * \n  *       \\_____/ \\_____/    \\_____________/    \\_____________/\n  *          |       |              |                  |\n  *       Note On  MIDI       Note #60 (C3)       Velocity 90\n  *                Ch. 1\n  * \n  *       The same as Uint8Array =>  [144, 60, 90]\n  */  \n\n  melody = [\n    [144, 69,  90], [144, 72,  79], [144, 69,  82], [144, 69,  95],\n    [144, 74,  90], [144, 69,  95], [144, 67,  95], [144, 69, 106], \n    [144, 76,  90], [144, 69, 106], [144, 69, 106], [144, 77,  95],\n    [144, 76,  82], [144, 72,  79], [144, 69,  82], [144, 76,  79],  \n    [144, 81,  63], [144, 76,  82], [144, 69,  79], [144, 69,  90],  \n    [144, 67,  86], [144, 64,  82], [144, 72,  79], [144, 69,  95],\n    [144, 69, 101], [144, 69, 101], [144, 69,  95], [144, 67, 101], \n    [144, 64,  95], [144, 62, 106]\n  ];\n  melodyCounter = 0;\n\n  constructor(\n    private serverService: ServerService,\n    private websocketService: WebsocketService,\n    private midiService: MidiService\n  ) {\n\n  }\n  \n  /* called when application/component gets initialized */\n  ngOnInit() {\n\n    /* Display Server URL if this app instance is run by electron app */\n    if (this.serverService.isServer()) {\n      this.serverAddress = this.serverService.getOwnIp() + ':4200';\n    }\n\n    /* use the URL for websockets */\n    this.connectToServer();\n\n    /* get the MIDI connection instance from MidiService */\n    this.midiService.getMidiConnection()\n    .then(connection => {\n      this.midiConnection = connection;\n\n      /* route Input to output */\n      this.midiConnection.subscribe(message => {\n        this.midiConnection.sendAll(message);\n      });\n\n});\n    \n    \n\n  }\n\n  connectToServer(): void {\n    \n    /* Connect to the webSocket server that has the same IP as the current http server.\n        The returning connection is an RxJs Subject that can be subscribed to. */\n    this.webSocket = this.websocketService.connect(`${location.hostname}:8080`);\n    \n    /* Get Data and parse from JSON */\n    this.webSocket.map(msg => JSON.parse(msg.data))\n  \n      /* Process the incoming data */\n      .subscribe(data => {\n  \n        console.log('Websocket In: ', data);\n  \n        /* display number of connected clients */\n        if (data.connections) {\n          this.connections = data.connections;\n        }\n\n        /* do stuff with events */\n        if (data.noteEvent) {\n          this.flashClients();\n        }\n\n        if (data.noteEvent === 'nextNote' && this.serverService.isServer()) {\n          /* \n            TODO for more stable multidevice melody playing: \n            Let server handle melody position and just give notes to clients\n          */\n          this.playNote();\n        }\n      });\n  }\n\n  /* set the connection name */\n  setName(name) {\n    this.webSocket.next({setName: name});\n  }\n\n  /* sent a noteEvent via webSocket to server */\n  pushTheButton(): void {\n    this.webSocket.next({noteEvent: 'nextNote'});\n  }\n\n  /* Makes the 'Clients' indicator flash (Maybe do with observables and async?)*/\n  private flashClients(): void {\n    \n    this.clientsColor = 'warn';\n    setTimeout(() => {\n      this.clientsColor = 'none';\n    }, 150);\n  }\n\n  /* Play a note of the melody */\n  private playNote(): void {\n    /* get note from melody array */\n    const note = this.melody[this.melodyCounter];\n\n    /* play the note */\n    this.midiConnection.sendAll(note);\n\n    /* Note off after 150ms */\n    setTimeout(() => {\n      this.midiConnection.sendAll([note[0], note[1], 0]);\n    }, 150);\n\n    /* go to next note */\n    this.melodyCounter = ++this.melodyCounter % (this.melody.length);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/alex/WebDevelopment/lan-jam/web-app/src/app/app.component.ts","import { MidiService } from './midi.service';\nimport { ServerService } from './server.service';\nimport { ElectronService } from 'ngx-electron';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\nimport 'hammerjs';\n\nimport { MaterialModule } from './material.module';\n\nimport { AppComponent } from './app.component';\nimport { WebsocketService } from './websocket.service';\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MaterialModule\n  ],\n  providers: [\n    ElectronService,\n    ServerService,\n    WebsocketService,\n    MidiService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Users/alex/WebDevelopment/lan-jam/web-app/src/app/app.module.ts","import { NgModule } from '@angular/core';\nimport { MdButtonModule, MdToolbarModule, MdChipsModule, MdInputModule } from '@angular/material';\n\n@NgModule({\n  imports: [\n    MdToolbarModule,\n    MdButtonModule,\n    MdChipsModule,\n    MdInputModule\n  ],\n  exports: [\n    MdToolbarModule,\n    MdButtonModule,\n    MdChipsModule,\n    MdInputModule\n  ]\n})\nexport class MaterialModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Users/alex/WebDevelopment/lan-jam/web-app/src/app/material.module.ts","import { Subject } from 'rxjs/Rx';\n\n/* \n  create a class -> because we are not savages\n\n  Class extends an subject. Maybe don't do this at home.\n*/\n\nexport class MidiConnection extends Subject<WebMidi.MIDIMessageEvent> {\n\n  private inputPorts: WebMidi.MIDIInput[] = [];\n  private outputPorts: WebMidi.MIDIOutput[] = [];\n\n  constructor(private midiAccess: WebMidi.MIDIAccess) {\n    super();\n    this.mapInputsAndOutputs();\n    this.subscribeToInputs();\n  }\n\n  /* Iterates over Map of inputs and overloads the onmidimessage method for each. */\n  private subscribeToInputs(): void {\n    const inputs = this.midiAccess.inputs.values();\n    for (let input = inputs.next(); input && !input.done; input = inputs.next()) {\n      input.value.onmidimessage = (event: any) => {\n\n\n        console.log('MIDI-In: ', event.data);\n        this.onMessage(event.data);\n\n      };\n    }\n  }\n\n  private onMessage(event): void {\n    this.next(event);\n  }\n\n  /* Iterates over Map of outputs and calls send(message) of each. */\n  public sendAll(message) {\n    console.log('MIDI-Out: ', message);\n    this.outputPorts.forEach(output => {\n      this.midiAccess.outputs.get(output.id).send(message);\n    });\n  }\n\n  private mapInputsAndOutputs(): void {\n    this.midiAccess.inputs.forEach(port => {\n      this.inputPorts.push(port);\n    });\n    this.midiAccess.outputs.forEach(port => {\n      this.outputPorts.push(port);\n    });\n\n    console.log(this.inputPorts);\n    console.log(this.outputPorts);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/alex/WebDevelopment/lan-jam/web-app/src/app/midi-connection.class.ts","import { Injectable } from '@angular/core';\nimport { MidiConnection } from './midi-connection.class';\n\n@Injectable()\nexport class MidiService {\n\n  midiConnection: MidiConnection;\n\n  getMidiConnection(): Promise<MidiConnection> {\n    return new Promise((resolve, reject) => {\n      /* Check if browser supports MIDI */\n      if (navigator.requestMIDIAccess) {\n\n        const accessOptions = {\n          sysex: false, // <-- request sysEx access\n          software: false // <-- request software synth access (need to test)\n        };\n\n        /* get the MIDIAccess and create our MidiConnection */\n        navigator.requestMIDIAccess(accessOptions)\n          .then((midiAccess: WebMidi.MIDIAccess) => {\n            console.log('MIDI Connection established.');\n\n            this.midiConnection = new MidiConnection(midiAccess);\n            resolve(this.midiConnection);\n          }, () => {\n            reject('The MIDI system failed to start.');\n          });\n      } else {\n        reject('Browser has no MIDI support.');\n      }\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/alex/WebDevelopment/lan-jam/web-app/src/app/midi.service.ts","import { Injectable } from '@angular/core';\n\nimport { ElectronService } from 'ngx-electron';\n\n@Injectable()\nexport class ServerService {\n\n  constructor(private electronService: ElectronService) { }\n\n  /* check if this web app instance is running in electron */\n  isServer(): boolean {\n    return this.electronService.isElectronApp;\n  }\n\n  getOwnIp(): string {\n    if (this.isServer) {\n      /* Use electron.remote to access OS information */\n      const os = this.electronService.remote.require('os'); // <-- RMI in Java, anyone?\n      const ifaces = os.networkInterfaces();\n      let ipAddress = '';\n\n      Object.keys(ifaces).forEach(ifname => {\n        ifaces[ifname].forEach(iface => {\n          if ('IPv4' !== iface.family || iface.internal !== false) {\n            // skip over internal (i.e. 127.0.0.1) and non-ipv4 addresses\n            return;\n          }\n          // this interface has only one ipv4 adress\n          ipAddress = iface.address;\n        });\n      });\n      return ipAddress;\n    } else {\n        throw(Error('Can not return IP address. This is not an nodejs environment.'));\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/alex/WebDevelopment/lan-jam/web-app/src/app/server.service.ts","import { Injectable } from '@angular/core';\nimport { Observable, Observer, Subject } from 'rxjs/Rx';\n\n@Injectable()\nexport class WebsocketService {\n\n  private subject: Subject<MessageEvent>;\n  private ws: WebSocket;\n\n  constructor() { }\n\n  /* connect to server (and create socket, if not exists) */\n  connect(address): Subject<MessageEvent> {\n    if (!this.subject) {\n      this.subject = this.create(address);\n    } else {\n      this.disconnect();\n      this.subject = this.create(address);\n    }\n    return this.subject;\n  }\n\n  /* create socket */\n  private create(address): Subject<MessageEvent> {\n\n    this.ws = new WebSocket(`ws://${address}`);\n\n    /* create the observable */\n    const observable = Observable.create((obs: Observer<MessageEvent>) => {\n        // bind the observable functions to webSocket callbacks to create an observable from webSocket input.\n        this.ws.onmessage = obs.next.bind(obs);\n        this.ws.onerror = obs.error.bind(obs);\n        this.ws.onclose = obs.complete.bind(obs);\n        return this.ws.close.bind(this.ws);\n      }\n    );\n\n    /* create the observer (call next(data) to send via webSocket ) */\n    const observer = {\n      next: data => {\n        if (this.ws.readyState === WebSocket.OPEN) {\n          this.ws.send(JSON.stringify(data));\n        }\n      }\n    };\n\n    /* \n      create Subject from observer and observable.\n      Read more about RxJS and Subjects at http://reactivex.io/rxjs/manual/overview.html#subject\n    */ \n    return Subject.create(observer, observable);\n  }\n  \n  /* disconnect and close websocket connection */\n  disconnect() {\n    if (this.subject) {\n      this.ws.close();\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/alex/WebDevelopment/lan-jam/web-app/src/app/websocket.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// /Users/alex/WebDevelopment/lan-jam/web-app/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// /Users/alex/WebDevelopment/lan-jam/web-app/src/main.ts"],"sourceRoot":"webpack:///"}